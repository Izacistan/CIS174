// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OlympicFlags.Models;

#nullable disable

namespace OlympicFlags.Migrations
{
    [DbContext(typeof(CountryContext))]
    partial class CountryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("OlympicFlags.Models.Category", b =>
                {
                    b.Property<string>("CategoryID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryID = "indoor",
                            CategoryName = "Indoor"
                        },
                        new
                        {
                            CategoryID = "outdoor",
                            CategoryName = "Outdoor"
                        });
                });

            modelBuilder.Entity("OlympicFlags.Models.Country", b =>
                {
                    b.Property<string>("CountryID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CategoryID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CountryFlag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GamesID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("CountryID");

                    b.HasIndex("CategoryID");

                    b.HasIndex("GamesID");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            CountryID = "can",
                            CategoryID = "indoor",
                            CountryFlag = "canada.jpg",
                            CountryName = "Canada",
                            GamesID = "winter"
                        },
                        new
                        {
                            CountryID = "swe",
                            CategoryID = "indoor",
                            CountryFlag = "sweden.jpg",
                            CountryName = "Sweden",
                            GamesID = "winter"
                        },
                        new
                        {
                            CountryID = "gbr",
                            CategoryID = "indoor",
                            CountryFlag = "great_britain.jpg",
                            CountryName = "Great Britain",
                            GamesID = "winter"
                        },
                        new
                        {
                            CountryID = "jam",
                            CategoryID = "outdoor",
                            CountryFlag = "jamaica.jpg",
                            CountryName = "Jamaica",
                            GamesID = "winter"
                        },
                        new
                        {
                            CountryID = "ita",
                            CategoryID = "outdoor",
                            CountryFlag = "italy.jpg",
                            CountryName = "Italy",
                            GamesID = "winter"
                        },
                        new
                        {
                            CountryID = "jpn",
                            CategoryID = "outdoor",
                            CountryFlag = "japan.jpg",
                            CountryName = "Japan",
                            GamesID = "winter"
                        },
                        new
                        {
                            CountryID = "deu",
                            CategoryID = "indoor",
                            CountryFlag = "germany.jpg",
                            CountryName = "Germany",
                            GamesID = "summer"
                        },
                        new
                        {
                            CountryID = "chn",
                            CategoryID = "indoor",
                            CountryFlag = "china.jpg",
                            CountryName = "China",
                            GamesID = "summer"
                        },
                        new
                        {
                            CountryID = "mex",
                            CategoryID = "indoor",
                            CountryFlag = "mexico.jpg",
                            CountryName = "Mexico",
                            GamesID = "summer"
                        },
                        new
                        {
                            CountryID = "bra",
                            CategoryID = "outdoor",
                            CountryFlag = "brazil.jpg",
                            CountryName = "Brazil",
                            GamesID = "summer"
                        },
                        new
                        {
                            CountryID = "abw",
                            CategoryID = "outdoor",
                            CountryFlag = "netherlands.jpg",
                            CountryName = "Netherlands",
                            GamesID = "summer"
                        },
                        new
                        {
                            CountryID = "usa",
                            CategoryID = "outdoor",
                            CountryFlag = "united_states.jpg",
                            CountryName = "United States",
                            GamesID = "summer"
                        },
                        new
                        {
                            CountryID = "tha",
                            CategoryID = "indoor",
                            CountryFlag = "thailand.jpg",
                            CountryName = "Thailand",
                            GamesID = "paralympic"
                        },
                        new
                        {
                            CountryID = "ury",
                            CategoryID = "indoor",
                            CountryFlag = "uruguay.jpg",
                            CountryName = "Uruguay",
                            GamesID = "paralympic"
                        },
                        new
                        {
                            CountryID = "ukr",
                            CategoryID = "indoor",
                            CountryFlag = "ukraine.jpg",
                            CountryName = "Ukraine",
                            GamesID = "paralympic"
                        },
                        new
                        {
                            CountryID = "aut",
                            CategoryID = "outdoor",
                            CountryFlag = "austria.jpg",
                            CountryName = "Austria",
                            GamesID = "paralympic"
                        },
                        new
                        {
                            CountryID = "pak",
                            CategoryID = "outdoor",
                            CountryFlag = "pakistan.jpg",
                            CountryName = "Pakistan",
                            GamesID = "paralympic"
                        },
                        new
                        {
                            CountryID = "zwe",
                            CategoryID = "outdoor",
                            CountryFlag = "zimbabwe.jpg",
                            CountryName = "Zimbabwe",
                            GamesID = "paralympic"
                        },
                        new
                        {
                            CountryID = "fra",
                            CategoryID = "indoor",
                            CountryFlag = "france.jpg",
                            CountryName = "France",
                            GamesID = "youth"
                        },
                        new
                        {
                            CountryID = "cyp",
                            CategoryID = "indoor",
                            CountryFlag = "cyprus.jpg",
                            CountryName = "Cyrpus",
                            GamesID = "youth"
                        },
                        new
                        {
                            CountryID = "rus",
                            CategoryID = "indoor",
                            CountryFlag = "russia.jpg",
                            CountryName = "Russia",
                            GamesID = "youth"
                        },
                        new
                        {
                            CountryID = "fin",
                            CategoryID = "outdoor",
                            CountryFlag = "finland.jpg",
                            CountryName = "Finland",
                            GamesID = "youth"
                        },
                        new
                        {
                            CountryID = "svk",
                            CategoryID = "outdoor",
                            CountryFlag = "slovakia.jpg",
                            CountryName = "Slovakia",
                            GamesID = "youth"
                        },
                        new
                        {
                            CountryID = "prt",
                            CategoryID = "outdoor",
                            CountryFlag = "portugal.jpg",
                            CountryName = "Portugal",
                            GamesID = "youth"
                        });
                });

            modelBuilder.Entity("OlympicFlags.Models.Games", b =>
                {
                    b.Property<string>("GamesID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("GamesName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GamesID");

                    b.ToTable("Game");

                    b.HasData(
                        new
                        {
                            GamesID = "summer",
                            GamesName = "Summer Olympics"
                        },
                        new
                        {
                            GamesID = "winter",
                            GamesName = "Winter Olympics"
                        },
                        new
                        {
                            GamesID = "paralympic",
                            GamesName = "Paralympic Games"
                        },
                        new
                        {
                            GamesID = "youth",
                            GamesName = "Youth Olympic Games"
                        });
                });

            modelBuilder.Entity("OlympicFlags.Models.Country", b =>
                {
                    b.HasOne("OlympicFlags.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OlympicFlags.Models.Games", "Game")
                        .WithMany()
                        .HasForeignKey("GamesID");

                    b.Navigation("Category");

                    b.Navigation("Game");
                });
#pragma warning restore 612, 618
        }
    }
}
